
# this function computes the nth fibonacci number 
fun fib(var n)
{
    if(n < 2){
        return n;
    }else{
        return fib(n - 1) + fib(n - 2); 
    }
}

# find all fibonacci numbers up to and including n
fun firstnfibs(var n){
    var i = 0;
    while(i <= n){
        fib(i + 1);
        i = i + 1;
    }
}

# multiply the two arguments, return the result
#fun mul(var a, var b)
#{
#    var result = 0;
#    if(a < b)
#    {
#        while(a > 0)
#        {
#            result = result + b;
#            a = a - 1;
#        }
#    }
#    else
#    {
#        while(b > 0)
#        {
#            result = result + a;
#            b = b - 1;
#        }
#    }
#    return result;
#}

# software modulo! (are you having fun yet?)
#fun modulo(var a, var b){
#    while(a >= b){
#        a = a - b;
#    }
#    return a;
#}
#
#fun isPrime(var n){
#    var i = 2;
#    while(i < n){
#        var result = modulo(n, i);
#        if(result == 0)
#            return 0;
#        i = i + 1;
#    }
#    return 1;
#}
#
#fun firstNPrimes(var n){
#    var i = 2;
#    var foundNum = 0;
#    while(foundNum < n){
#        var result = isPrime(i);
#        if(result == 1){
#            foundNum = foundNum + 1;
#        }
#        i = i + 1;
#    }
#    while(n > 0){
#        fib(n);
#        n = n - 1;
#    }
#}

$$